name: Infrastructure Deployment Workflow - Development

on:
  # pull_request:
  #   branches:
  #     - main
  push:
    branches:
      - main

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    environment: development
    permissions:
      id-token: write
      contents: read
    env:
      PROJECT_NAME: ecs-poc

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: "GitHub_to_AWS_via_FederatedOIDC"
          aws-region: ${{ secrets.AWS_Region }}

      # - name: Check if VPC Cloudfomation Stack exists
      #   id: check-vpc-stack
      #   continue-on-error: true
      #   run: |
      #     aws cloudformation describe-stacks \
      #       --stack-name ${{ env.PROJECT_NAME }}-vpc-stack \
      #       --region ${{ secrets.AWS_Region }} \
      #       --query 'Stacks[].StackName' \
      #       --output text

      # - name: Show VPC Cloudformation Stack changes
      #   if: steps.check-vpc-stack.outputs.stdout == ${{ env.PROJECT_NAME }}-vpc-stack
      #   run: |
      #     aws cloudformation create-change-set \
      #       --stack-name ${{ env.PROJECT_NAME }}-vpc-stack \
      #       --change-set-name ${{ env.PROJECT_NAME }}-vpc-stack-changes \
      #       --template-body file://vpc.yaml \
      #       --on-stack-failure DO_NOTHING \
      #       --capabilities CAPABILITY_NAMED_IAM \
      #       --region ${{ secrets.AWS_Region }} \
      #       --parameters ParameterKey=EnvironmentName,ParameterValue=dev
      #     aws cloudformation describe-change-set \
      #       --stack-name ${{ env.PROJECT_NAME }}-vpc-stack \
      #       --change-set-name ${{ env.PROJECT_NAME }}-vpc-stack-changes \
      #       --region ${{ secrets.AWS_Region }}
      #     aws cloudformation delete-change-set \
      #       --stack-name ${{ env.PROJECT_NAME }}-vpc-stack \
      #       --change-set-name ${{ env.PROJECT_NAME }}-vpc-stack-changes \
      #       --region ${{ secrets.AWS_Region }}

      - name: Deploy VPC Cloudformation Stack
        if: github.event.pull_request.merged == true || github.event_name == 'push'
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.PROJECT_NAME }}-vpc-stack
          template: "vpc.yaml"
          no-fail-on-empty-changeset: "1"
          disable-rollback: "1"
          capabilities: CAPABILITY_NAMED_IAM

      - name: Deploy ECR Cloudformation Stack
        if: github.event.pull_request.merged == true || github.event_name == 'push'
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.PROJECT_NAME }}-ecr-stack
          template: "ecr.yaml"
          no-fail-on-empty-changeset: "1"
          disable-rollback: "1"
          capabilities: CAPABILITY_NAMED_IAM

      - name: Deploy S3 Cloudformation Stack
        if: github.event.pull_request.merged == true || github.event_name == 'push'
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.PROJECT_NAME }}-s3-stack
          template: "s3.yaml"
          no-fail-on-empty-changeset: "1"
          disable-rollback: "1"
          capabilities: CAPABILITY_NAMED_IAM

      - name: Deploy RDS Cloudformation Stack
        if: github.event.pull_request.merged == true || github.event_name == 'push'
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.PROJECT_NAME }}-rds-stack
          template: "rds.yaml"
          no-fail-on-empty-changeset: "1"
          disable-rollback: "1"
          capabilities: CAPABILITY_NAMED_IAM

      - name: Deploy ECS Cloudformation Stack
        if: github.event.pull_request.merged == true || github.event_name == 'push'
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.PROJECT_NAME }}-ecs-stack
          template: "ecs.yaml"
          no-fail-on-empty-changeset: "1"
          disable-rollback: "1"
          capabilities: CAPABILITY_NAMED_IAM
          parameter-overrides: |
            EnvironmentName=dev
