name: Infrastructure Deployment Workflow - Development

on:
  push:
    branches:
      - main

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: development
    permissions:
      id-token: write
      contents: read
    env:
      PROJECT_NAME: ecs-poc

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          # Token and fetch-depth are used in increase patch version step
          token: ${{ secrets.PIPELINE_PAT }}
          fetch-depth: true

      - name: Increase Patch Version
        run: |
          chmod +x ./.github/workflows/scripts/increment-version.sh
          ./.github/workflows/scripts/increment-version.sh -v patch

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: "GitHub_to_AWS_via_FederatedOIDC"
          aws-region: ${{ secrets.AWS_Region }}

      - name: Deploy VPC Cloudformation Stack
        if: github.event.pull_request.merged == true || github.event_name == 'push'
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.PROJECT_NAME }}-vpc-stack
          template: "vpc.yaml"
          no-fail-on-empty-changeset: "1"
          disable-rollback: "1"
          capabilities: CAPABILITY_NAMED_IAM

      - name: Deploy ECR Cloudformation Stack
        if: github.event.pull_request.merged == true || github.event_name == 'push'
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.PROJECT_NAME }}-ecr-stack
          template: "ecr.yaml"
          no-fail-on-empty-changeset: "1"
          disable-rollback: "1"
          capabilities: CAPABILITY_NAMED_IAM

      - name: Deploy S3 Cloudformation Stack
        if: github.event.pull_request.merged == true || github.event_name == 'push'
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.PROJECT_NAME }}-s3-stack
          template: "s3.yaml"
          no-fail-on-empty-changeset: "1"
          disable-rollback: "1"
          capabilities: CAPABILITY_NAMED_IAM

      - name: Deploy RDS Cloudformation Stack
        if: github.event.pull_request.merged == true || github.event_name == 'push'
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.PROJECT_NAME }}-rds-stack
          template: "rds.yaml"
          no-fail-on-empty-changeset: "1"
          disable-rollback: "1"
          capabilities: CAPABILITY_NAMED_IAM

      - name: Deploy ECS Cloudformation Stack
        if: github.event.pull_request.merged == true || github.event_name == 'push'
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.PROJECT_NAME }}-ecs-stack
          template: "ecs.yaml"
          no-fail-on-empty-changeset: "1"
          disable-rollback: "1"
          capabilities: CAPABILITY_NAMED_IAM
          parameter-overrides: |
            EnvironmentName=dev
